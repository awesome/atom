#!/usr/bin/env ruby
# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility
unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end
$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')
require 'rubygems'
require 'gli'
require 'atom_version'
require 'atom'

include GLI

program_desc 'tool for creating "atomic" text-based documentation'

version Atom::VERSION

desc 'create a new documentation repository'
arg_name 'Describe arguments to new here'
command :new do |c|
  c.desc 'Describe a switch to new'
  c.switch :s

  c.desc 'Describe a flag to new'
  c.default_value 'default'
  c.flag :f
  c.action do |global_options,options,args|
    proj_names = args
    
    if args.length < 1
      raise 'You must provide a project name'
    elsif File.exist? '.atom'
      raise 'This appears to be an atom directory'
    end
    
    proj_names.each do |proj_name|
      Atom::Scaffold.create(proj_name)
    end
    
    # Your command logic here
     
    # If you have any errors, just raise them
    # raise "that command made no sense"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit GLI.run(ARGV)
